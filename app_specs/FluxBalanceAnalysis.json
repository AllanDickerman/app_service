{
	"id":"FluxBalanceAnalysis",
	"script":"App-FluxBalanceAnalysis",
	"label":"Run flux balance analysis",
	"description":"Run flux balance analysis on model.",
	"parameters":[
		{
			"id":"model",
			"required":1,
			"default":null,
			"label":"Model object",
			"desc":"Model on which to run flux balance analysis",
			"wstype":"model",
			"type":"wstype"
		},
		{
			"id":"media",
			"label":"FBA media",
			"required":0,
			"default":null,
			"desc":"Media formulation for flux balance analysis",
			"wstype":"media",
			"type":"wstype"
		},
		{
			"id":"fva",
			"label":"Run FVA",
			"required":1,
			"default":false,
			"desc":"Minimize and maximize each reaction to permit classificaton of reaction activity",
			"type":"bool"
		},
		{
			"id":"predict_essentiality",
			"label":"Predict essentiality",
			"required":1,
			"default":false,
			"desc":"Simulate the knockout of each gene in the model to evaluate gene essentiality",
			"type":"bool"
		},
		{
			"id":"minimizeflux",
			"label":"Minimize solution flux",
			"required":1,
			"default":false,
			"desc":"Minimize sum of all fluxes in reported optimal solution",
			"type":"bool"
		},
		{
			"id":"findminmedia",
			"label":"Compute minimal media",
			"required":1,
			"default":false,
			"desc":"Predict the minimal media formulation that will support growth of current model",
			"type":"bool"
		},
		{
			"id":"allreversible",
			"label":"Make all reactions reversible",
			"required":1,
			"default":false,
			"desc":"Ignore existing reaction reversibilities and make all reactions reversible",
			"type":"bool"
		},
		{
			"id":"thermo_const_type",
			"label":"Thermodynamic constraints",
			"required":0,
			"default":null,
			"desc":"Type of thermodynamic constraints",
			"type": "enum",
            "enum": ["None", "Simple"]
		},
		{
			"id": "media_supplement",
		    "allow_multiple": true,
         	"label": "Media supplements",
		    "required": 0,
		    "default" : null,
		    "type": "string",
		    "desc": "Additional compounds to supplement media in FBA simulaton"
		},
		{
			"id":"geneko",
			"allow_multiple": true,
			"label":"Gene knockouts",
			"required":0,
			"default":null,
			"desc":"List of gene knockouts to simulation in FBA.",
			"type":"string"
		},
		{
			"id":"rxnko",
			"allow_multiple": true,
			"label":"Reaction knockouts",
			"required":0,
			"default":null,
			"desc":"List of reaction knockouts to simulation in FBA.",
			"type":"string"
		},
		{
			"id":"objective_fraction",
			"label":"Objective fraction",
			"required":1,
			"default":1,
			"desc":"Objective fraction for follow up analysis (e.g. FVA, essentiality prediction)",
			"type":"float"
		},
		{
			"id":"c_uptake",
			"label":"Max carbon uptake",
			"required":0,
			"default":null,
			"desc":"Maximum atoms of carbon uptake",
			"type":"float"
		},
		{
			"id":"n_uptake",
			"label":"Max nitrogen uptake",
			"required":0,
			"default":null,
			"desc":"Maximum atoms of nitrogen uptake",
			"type":"float"
		},
		{
			"id":"s_uptake",
			"label":"Max sulfure uptake",
			"required":0,
			"default":null,
			"desc":"Maximum atoms of sulfure uptake",
			"type":"float"
		},
		{
			"id":"p_uptake",
			"label":"Max phosphate uptake",
			"required":0,
			"default":null,
			"desc":"Maximum atoms of phosphate uptake",
			"type":"float"
		},
		{
			"id":"o_uptake",
			"label":"Max oxygen uptake",
			"required":0,
			"default":null,
			"desc":"Maximum atoms of oxygen uptake",
			"type":"float"
		},
		{
			"id":"output_file",
			"label":"File Basename",
			"required":0,
			"default":null,
			"desc":"Basename for the generated output files. Defaults to the basename of the input data.",
			"type":"wsid"
		}
		{
            "id": "custom_bounds",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default" : null,
            "group": [
                {
                    "id": "vartype",
                    "required": 1,
                    "label": "Variable type",
                    "default": "flux",
                    "desc": "Type for variable in custom bound",
                    "enum": ["flux","biomassflux","drainflux"],
                    "type": "enum"
                },
                {
                    "id": "variable",
                    "required": 1,
                    "label": "Variable ID",
                    "default": "null",
                    "desc": "ID of variable for custom bound",
                    "type": "string"
                },
                {
                    "id": "upperbound",
                    "required": 1,
                    "label": "Upper bound",
                    "default": "100",
                    "desc": "Upper bound for custom bound",
                    "type": "float"
                },
                {
                    "id": "lowerbound",
                    "required": 1,
                    "label": "Lower bound",
                    "default": "-100",
                    "desc": "Lower bound for custom bound",
                    "type": "flaot"
                }
            ]
        },
        {
            "id": "objective",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default" : null,
            "group": [
                {
                    "id": "vartype",
                    "required": 1,
                    "label": "Variable type",
                    "default": "biomassflux",
                    "desc": "Type for variable in objective",
                    "enum": ["flux","biomassflux","drainflux"],
                    "type": "enum"
                },
                {
                    "id": "variable",
                    "required": 1,
                    "label": "Variable ID",
                    "default": "bio1",
                    "desc": "ID of variable for objective",
                    "type": "string"
                },
                {
                    "id": "coefficient",
                    "required": 1,
                    "label": "Coefficient",
                    "default": "1",
                    "desc": "Coefficient for term in objective",
                    "type": "float"
                }
            ]
        },
	]
}
